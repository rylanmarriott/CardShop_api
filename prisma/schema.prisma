// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  product_id     Int      @id @default(autoincrement())
  name           String
  description    String
  cost           Decimal
  image_filename String

  //Relationship
  PurchaseItem PurchaseItem[]
}

model Customer {
  customer_id Int    @id @default(autoincrement())
  email       String @unique
  password    String
  first_name  String
  last_name   String

  //Relationship
  Purchase Purchase[]
}

model Purchase {
  purchase_id   Int      @id @default(autoincrement())
  customer_id   Int
  street        String
  city          String
  province      String
  country       String
  postal_code   String
  credit_card   String
  credit_expire String
  credit_cvv    String
  invoice_amt   Decimal
  invoice_tax   Decimal
  invoice_total Decimal
  order_date    DateTime @default(now())

  // Relationships
  customer      Customer @relation(fields: [customer_id], references: [customer_id])
  items         PurchaseItem[]

  @@map("purchase")
}

model PurchaseItem {
  purchase_id Int
  product_id  Int
  quantity    Int

  // Relationships
  purchase    Purchase @relation(fields: [purchase_id], references: [purchase_id])
  product     Product  @relation(fields: [product_id], references: [product_id])

  @@id([purchase_id, product_id]) // Composite key
  @@map("purchase_item")
}
